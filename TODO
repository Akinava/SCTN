# rebuild and run project in local containers
docker-compose -f ./docker/docker-compose.yml up --build

# build image
docker build -f docker/Dockerfile -t sctn:v0 .

# build and run container interactive
docker run -it sctn:v0

# start container interactive
docker start -i sctn_0

# run client local
python3 test/test_peer.py -p tmp/peers1.json -c tmp/config1.json -s tmp/shadow1
python3 test/test_peer.py -p tmp/peers2.json -c tmp/config2.json -s tmp/shadow2

# run server local
python3 src/server_host.py -c docker/config.json -s docker/shadow

TODO
check peer_connections and init test client
move hpn_common to lib
dockerise
servers_timeout_days setter
test server disconnect
test connect via client


# docker
h: docker pull python:3-alpine
h: docker run -it --name=hpnc1 python:3-alpine /bin/sh

d: mkdir -p /usr/src/hpnc/src
d: mkdir -p /usr/src/hpnc/test

h: docker cp requirements.txt hpnc1:/usr/src/hpnc
h: for f in $(ls src); do echo $f; docker cp src/${f} hpnc1:/usr/src/hpnc/src; done
h: for f in $(ls ../hpn_common/src/); do echo $f; docker cp ../hpn_common/src/${f} hpnc1:/usr/src/hpnc/src; done
h: docker cp test/test_peer.py hpnc1:/usr/src/hpnc/test
h: docker cp tmp/peers1.json hpnc1:/usr/src/hpnc/peers.json
h: docker cp tmp/config1.json hpnc1:/usr/src/hpnc/config.json

d: apk add g++
d: apk add git
d: /usr/local/bin/python3 -m pip install --upgrade pip
d: pip install -r /usr/src/hpnc/requirements.txt
d: python3 /usr/src/hpnc/test/test_peer.py -p /usr/src/hpnc/peers.json -c /usr/src/hpnc/config1.json -s /usr/src/hpnc/shadow